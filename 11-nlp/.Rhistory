i=1:10
z <- 5:7
print("hello world")
getwd()
setwd()
getwd()
getwd()
setwd("C:/Users/angel/Desktop/Programacion/udemy/Machine learning/mis codigos/11")
dataset = read.csv("estaurant_Reviews.tsv",sep = '\t')
dataset = read.csv("Restaurant_Reviews.tsv",sep = '\t')
View(dataset)
dataset = read.delim("Restaurant_Reviews.tsv")
dataset = read.delim("Restaurant_Reviews.tsv",quote = '')
dataset = read.delim("Restaurant_Reviews.tsv",quote = '',stringsAsFactors = FALSE)
#limpieza de textos
install.packages("tm")
#limpieza de textos
#install.packages("tm")
library(tm)
corpus = VCorpus(VectorSource(dataset$Review))
View(corpus)
corpus = tm_map(corpus, content_transformer(tolower))
View(corpus)
corpus[[1]]
as.character(corpus[[1]])
as.character(corpus[[841]])
corpus = tm_map(corpus, removeNumbers)
as.character(corpus[[841]])
corpus = tm_map(corpus, removePunctuation)
as.character(corpus[[1]])
#limpieza de textos
#install.packages("tm")
install.packages("SnowballC")
#limpieza de textos
#install.packages("tm")
#install.packages("SnowballC")
library(SnowballC)
corpus = tm_map(corpus, removeWords, stopwords(kind = 'en'))
as.character(corpus[[1]])
corpus = tm_map(corpus, stemDocument)
as.character(corpus[[1]])
corpus = tm_map(corpus, stripWhitespace)
#Crear el modelo Bag of Words
dtm = DocumentTermMatrix(corpus)
View(dtm)
dtm = removeSparseTerms(dtm, 0.99)
dtm = removeSparseTerms(dtm, 0.999)
#Crear el modelo Bag of Words
dtm = DocumentTermMatrix(corpus)
dtm = removeSparseTerms(dtm, 0.999)
dtm
dataset = as.data.frame(as.matrix(dtm))
View(dataset)
#Natural language Processing
dataset_original = read.delim("Restaurant_Reviews.tsv",quote = '',stringsAsFactors = FALSE)
dataset$Liked = dataset_original$Liked
dataset$Liked = factor(dataset$Liked, levels = c(0,1))
library(caTools)
set.seed(123)
split = sample.split(dataset$Liked,SplitRatio = 0.80)
training_set = subset(dataset,split == TRUE)
testing_set = subset(dataset,split == FALSE)
library(randomForest)
classifier = randomForest(formula = Liked ~ ., data = training_set, ntree = 10)
y_pred = predict(classifier, newdata = testing_set[,-692])
cm = table(testing_set[,692], y_pred)
dataset$Liked = factor(dataset$Liked, levels = c(0,1))
library(caTools)
set.seed(123)
split = sample.split(dataset$Liked,SplitRatio = 0.80)
training_set = subset(dataset,split == TRUE)
testing_set = subset(dataset,split == FALSE)
library(randomForest)
classifier = randomForest(formula = Liked ~ ., data = training_set, ntree = 10)
classifier = randomForest(x=training_set[,-692], y = training_set$Liked, ntree = 10)
y_pred = predict(classifier, newdata = testing_set[,-692])
cm = table(testing_set[,692], y_pred)
cm
